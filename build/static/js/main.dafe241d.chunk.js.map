{"version":3,"sources":["containers/Main.js","containers/LoginPage.js","components/menu/Menu.js","components/row_list/RowList.js","components/lists/List.js","components/content_list/ContentList.js","components/navbar_top/NavbarTop.js","containers/DashboardPage.js","App.js","serviceWorker.js","index.js"],"names":["Main","_ref","children","react_default","a","createElement","className","id","LoginPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","change","e","name","target","value","setState","defineProperty","handleSubmit","showMsg","state","username","localStorage","clear","setItem","history","push","pathname","path","match","password","getItem","_this2","Container","fluid","Row","Col","md","span","offset","Form","placeholder","type","onChange","Button","variant","onClick","Component","Menu","class","react_router_dom","exact","to","activeClassName","logout","bind","RowList","handleShow","show","handleClose","User","TypeEmergency","Status","MsgEmergency","Tlf","Modal","onHide","Header","closeButton","Title","Body","Footer","List","Data","background","backTitle","concat","map","index","components_row_list_RowList","ContentList","components_lists_List","NavbarTop","emergencias_entrantes","DashboardPage","components_menu_Menu","components_navbar_top_NavbarTop","components_content_list_ContentList","App","requireAuth","Comp","react_router","render","LoginPage_LoginPage","containers_Main","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dafe241d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Main = ({children}) => (\r\n    <div className=\"container-main\" id=\"outer-container\">\r\n        \r\n        <main className=\"container-main-children\" id=\"page-wrap\">\r\n        {children}\r\n        </main>\r\n        \r\n    </div>\r\n);\r\n\r\nexport default Main;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\r\n\r\n//Assets\r\nimport 'assets/styles/LoginPage.css';\r\n\r\nexport default class LoginPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      path : this.props.match.path,\r\n      username : '',\r\n      password : '',\r\n      showMsg : false\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    if (localStorage.getItem('tokenUser')) {\r\n      let from = {pathname: '/dashboard' }\r\n      this.props.history.push(from);\r\n    }\r\n  }\r\n\r\n  change = (e) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    this.setState({ showMsg : false }) \r\n    if(this.state.username == \"central@rescate.com\"){\r\n      localStorage.clear();\r\n      localStorage.setItem('tokenUser', \"central@rescate.com\");\r\n      this.props.history.push({pathname: '/dashboard' });\r\n    }else{\r\n      this.setState({ showMsg : true })\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Container id=\"ContainerLogin\" fluid={true}>\r\n        <Row id=\"RowLogin\">\r\n          <Col id=\"ColLoginCenter\" md={{ span: 6, offset: 3 }}>\r\n          <div className=\"ContinerFormLogin\">\r\n            {\r\n              this.state.showMsg ?\r\n              <div className=\"MsgErrorLogin\">\r\n                <p>\r\n                  Username or Password Incorrect\r\n                </p>\r\n              </div>\r\n              :\r\n              null\r\n            }\r\n            <Form>\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">\r\n                  Email\r\n                </label>\r\n                <input \r\n                  placeholder=\"Enter email\" \r\n                  type=\"email\" \r\n                  id=\"formBasicEmail\"\r\n                  className=\"form-control\"\r\n                  name = \"username\" \r\n                  onChange={ e => this.change(e) }  \r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">\r\n                  Password\r\n                </label>\r\n                <input \r\n                  placeholder=\"Password\" \r\n                  type=\"password\" \r\n                  className=\"form-control\"\r\n                  name = \"password\" \r\n                  onChange={ e => this.change(e) }  \r\n                />\r\n              </div>\r\n              <div className=\"DivButtonLogin\">\r\n                <Button variant=\"primary\"\r\n                  onClick={ () => this.handleSubmit() }\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport './Menu.css';\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    logout() {\r\n        localStorage.clear();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"ContainerMenu\">\r\n                <div className=\"Menu\">\r\n                    <div className=\"LogoMenu\">\r\n                        <p>\r\n                        <span><i class=\"fas fa-first-aid\"></i></span> Central de <span>Emergencias</span> \r\n                        </p>\r\n                    </div>\r\n                    <div className=\"links\">\r\n                        <NavLink\r\n                            exact\r\n                            to=\"/dashboard\"\r\n                            activeClassName=\"is-selected\"\r\n                            className =  \"menuUser\"\r\n                        >\r\n                           <i class=\"fas fa-address-card\"></i> Dashboard\r\n                        </NavLink>\r\n                        <NavLink\r\n                            exact\r\n                            to=\"/profile\"\r\n                            activeClassName=\"is-selected\"\r\n                            className =  \"menuUser\"\r\n                        >\r\n                            <i class=\"fas fa-user-cog\"></i>  Perfil\r\n                        </NavLink>\r\n                        <NavLink\r\n                            exact\r\n                            to=\"/\"\r\n                            activeClassName=\"is-selected\"\r\n                            className =  \"menuUser\"\r\n                            onClick={this.logout.bind(this)}\r\n                        >\r\n                            <i class=\"fas fa-sign-out-alt\"></i>  Cerrar Sesión\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className=\"footerMenu\">\r\n                        <p><i class=\"fas fa-user\"></i> {localStorage.getItem('tokenUser')}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\n\r\nimport { Row ,Col, Modal, Button } from 'react-bootstrap';\r\n\r\nimport './RowList.css';\r\n\r\nclass RowList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            User : \"\",\r\n            TypeEmergency : \"\",\r\n            Status : \"\",\r\n            MsgEmergency : \"\", \r\n            Tlf : \"\",\r\n            show: false\r\n        }\r\n    }\r\n\r\n    componentWillMount () {\r\n        this.setState({ \r\n            User: this.props.User,\r\n            TypeEmergency: this.props.TypeEmergency,\r\n            Status: this.props.Status,\r\n            MsgEmergency: this.props.MsgEmergency,\r\n            Tlf: this.props.Tlf\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        if (props) {\r\n            this.setState({ \r\n                User: props.User,\r\n                TypeEmergency: props.TypeEmergency,\r\n                Status: props.Status,\r\n                MsgEmergency: props.MsgEmergency,\r\n                Tlf: props.Tlf\r\n            })\r\n        }\r\n    }\r\n\r\n    handleShow = () => {\r\n        this.setState({ show: true });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ show: false });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"ContainerRowList\">\r\n                    \r\n                    <Row onClick={this.handleShow}>\r\n                        <Col>\r\n                            Usuario: <span>{this.state.User} </span> <br/>\r\n                            Tipo de Emergencia: <span>{this.state.TypeEmergency}</span> <br/>\r\n                            Estatus: <span>{this.state.Status} </span>\r\n                        </Col>\r\n                        <Col>\r\n                            Mensaje: <span>{this.state.MsgEmergency}</span> <br/>\r\n                            Tlf: <span>{this.state.Tlf}</span>\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                </div>\r\n                <Modal show={this.state.show} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>Información de la Emergencia</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Row onClick={this.handleShow}>\r\n                            <Col>\r\n                                Usuario: <span>{this.state.User} </span> <br/>\r\n                                Tipo de Emergencia: <span>{this.state.TypeEmergency}</span> <br/>\r\n                                Estatus: <span>{this.state.Status} </span>\r\n                            </Col>\r\n                            <Col>\r\n                                Mensaje: <span>{this.state.MsgEmergency}</span> <br/>\r\n                                Tlf: <span>{this.state.Tlf}</span>\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                        Cerrar\r\n                    </Button>\r\n                    <Button variant=\"primary\">\r\n                        Enviar Correo\r\n                    </Button>\r\n                    <Button variant=\"success\">\r\n                        Procesar\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RowList;","import React, { Component } from 'react';\r\n\r\nimport RowList from 'components/row_list/RowList';\r\n\r\nimport './List.css';\r\n\r\nclass List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Title : \"\",\r\n            Data : []\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        if (props) {\r\n            this.setState({ \r\n                Title: props.Title,\r\n                Data : props.Data\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillMount () {\r\n\r\n        let background = \"\";\r\n\r\n        if(this.props.Title === \"Emergencias Entrantes\"){\r\n            background = \"red\"\r\n        }else if( this.props.Title === \"Emergencias En Procesadas\" ){\r\n            background = \"green\"\r\n        }\r\n\r\n        this.setState({ \r\n            Title: this.props.Title,\r\n            Data: this.props.Data,\r\n            backTitle : background\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"List\">\r\n                    <div className={`TitleList ${this.state.backTitle}`}>\r\n                        {this.state.Title}\r\n                    </div>\r\n                    <div className=\"cardList\">\r\n                        {\r\n                            this.state.Data.map( (index) => {\r\n                                return <RowList \r\n                                    User = {index.User}\r\n                                    TypeEmergency = {index.TypeEmergency}\r\n                                    Status = {index.Status}\r\n                                    MsgEmergency = {index.MsgEmergency}\r\n                                    Tlf = {index.Tlf}\r\n                                />\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default List;","import React, { Component } from 'react';\r\n\r\nimport List from 'components/lists/List';\r\n\r\nimport './ContentList.css';\r\n\r\nclass ContentList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Title: \"\",\r\n            Data : []\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        if (props) {\r\n            this.setState({ \r\n                Title: props.Title,\r\n                Data : props.Data\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillMount () {\r\n\r\n        this.setState({ \r\n            Title: this.props.Title,\r\n            Data: this.props.Data,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <List\r\n                Title = {this.state.Title}\r\n                Data = {this.state.Data }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContentList;","import React, { Component } from 'react';\r\n\r\nimport './NavbarTop.css';\r\n\r\nclass NavbarTop extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ContainerNavbarTop\">\r\n                <div className=\"NavbarTop\">\r\n                    <div>\r\n                        <i class=\"fas fa-bell\"></i>\r\n                    </div>\r\n                    <div>\r\n                        <i class=\"fas fa-envelope\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavbarTop;","import React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n//Assets\r\nimport 'assets/styles/DashboardPage.css';\r\n\r\n//Components\r\nimport Menu from 'components/menu/Menu';\r\nimport ContentList from 'components/content_list/ContentList';\r\nimport NavbarTop from 'components/navbar_top/NavbarTop';\r\n\r\nconst emergencias_entrantes = [\r\n    {\r\n        User : \"Alex\" ,\r\n        TypeEmergency : \"Accidente de Transito\",\r\n        Status : \"No procesada\",\r\n        MsgEmergency : \"Tuve un choque en la Av. Francisco Fajardo, Ayuda por favor!\",\r\n        Tlf : \"+584168292312\",\r\n    },\r\n    {\r\n        User : \"Maria\" ,\r\n        TypeEmergency : \"Extravío\",\r\n        Status : \"No procesada\",\r\n        MsgEmergency : \"Salí al avila a pasear y me perdí, Ayuda por favor!\",\r\n        Tlf : \"+584245454312\",\r\n    },\r\n    {\r\n        User : \"Enrique\" ,\r\n        TypeEmergency : \"Accidente de Transito\",\r\n        Status : \"No procesada\",\r\n        MsgEmergency : \"Tuve un choque en la Av. Panteón, Ayuda por favor!\",\r\n        Tlf : \"+584168233312\",\r\n    },{\r\n        User : \"Enrique\" ,\r\n        TypeEmergency : \"Accidente de Transito\",\r\n        Status : \"No procesada\",\r\n        MsgEmergency : \"Tuve un choque en la Av. Panteón, Ayuda por favor!\",\r\n        Tlf : \"+584168233312\",\r\n    },{\r\n        User : \"Enrique\" ,\r\n        TypeEmergency : \"Accidente de Transito\",\r\n        Status : \"No procesada\",\r\n        MsgEmergency : \"Tuve un choque en la Av. Panteón, Ayuda por favor!\",\r\n        Tlf : \"+584168233312\",\r\n    },{\r\n        User : \"Enrique\" ,\r\n        TypeEmergency : \"Accidente de Transito\",\r\n        Status : \"No procesada\",\r\n        MsgEmergency : \"Tuve un choque en la Av. Panteón, Ayuda por favor!\",\r\n        Tlf : \"+584168233312\",\r\n    },{\r\n        User : \"Enrique\" ,\r\n        TypeEmergency : \"Accidente de Transito\",\r\n        Status : \"No procesada\",\r\n        MsgEmergency : \"Tuve un choque en la Av. Panteón, Ayuda por favor!\",\r\n        Tlf : \"+584168233312\",\r\n    },{\r\n        User : \"Enrique\" ,\r\n        TypeEmergency : \"Accidente de Transito\",\r\n        Status : \"No procesada\",\r\n        MsgEmergency : \"Tuve un choque en la Av. Panteón, Ayuda por favor!\",\r\n        Tlf : \"+584168233312\",\r\n    },\r\n]\r\n\r\nclass DashboardPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container \r\n                id=\"ContainerDashboard\" \r\n                fluid={true}\r\n            >\r\n                <Row id=\"RowDashboard\">\r\n                    <div className=\"BarLeft\">\r\n                        <Menu />\r\n                    </div>\r\n                    <div className=\"BarRight\">\r\n                        <NavbarTop />\r\n                        <Container \r\n                            fluid={true}\r\n                            id=\"ContainerOfList\" \r\n                        >\r\n                            <ContentList\r\n                                Title = {'Emergencias Entrantes'}\r\n                                Data = { emergencias_entrantes }\r\n                            />\r\n                            <ContentList\r\n                                Title = {'Emergencias En Procesadas'}\r\n                                Data = { emergencias_entrantes }\r\n                            />\r\n                        </Container>\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DashboardPage;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\n//Components\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\n// Pages\r\nimport Main from 'containers/Main';\r\nimport LoginPage from 'containers/LoginPage';\r\nimport DashboardPage from 'containers/DashboardPage';\r\n\r\nclass App extends Component {\r\n\r\n  requireAuth = (Comp, props) => {\r\n    if (localStorage.getItem('tokenUser')) {\r\n      return (\r\n          <Comp {...props}/>\r\n      );\r\n    }\r\n    return <Redirect to=\"/login\" />;\r\n  };\r\n\r\n  render () {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path='/'\r\n              render={(props) => <LoginPage {...props} />}\r\n            />\r\n            <Main>\r\n              <Switch>\r\n                <Route\r\n                  exact\r\n                  path=\"/dashboard\"\r\n                  render={props => this.requireAuth(DashboardPage, props)}\r\n                />\r\n              </Switch>\r\n            </Main>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}